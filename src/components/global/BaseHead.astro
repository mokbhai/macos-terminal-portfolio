---
import '../../styles/global.css';
import { AstroSeo } from '@astrolib/seo';
import { getImage } from 'astro:assets';
import macBackground1 from '../../assets/images/mac-background1.jpg';
import macBackground2 from '../../assets/images/mac-background2.jpg';
import macBackground3 from '../../assets/images/mac-background3.jpg';

const backgrounds = await Promise.all([
  getImage({ src: macBackground1, width: 3500 }),
  getImage({ src: macBackground2, width: 3500 }),
  getImage({ src: macBackground3, width: 3500 }),
]);
---

<!-- Core meta tags -->
<meta charset='UTF-8' />
<meta http-equiv='X-UA-Compatible' content='IE=edge' />
<meta
  name='viewport'
  content='width=device-width, initial-scale=1, maximum-scale=1'
/>
<meta name='author' content='Mokshit Jain' />

<!-- SEO Configuration - customize these values -->
<AstroSeo
  title={Astro.props.title || 'Mokshit Jain - Software Developer & IoT Engineer'}
  description={Astro.props.description ||
    'Software Developer and IoT Engineer specializing in full-stack development, IoT systems, and real-time applications. BTech Computer Science student at LPU.'}
  canonical={Astro.props.canonical || 'https://mokshitjain.netlify.app'}
  openGraph={{
    url: Astro.props.openGraph?.url || 'https://mokshitjain.netlify.app',
    title: Astro.props.openGraph?.title || 'Mokshit Jain - Software Developer & IoT Engineer',
    description:
      Astro.props.openGraph?.description ||
      'Software Developer and IoT Engineer specializing in full-stack development, IoT systems, and real-time applications. BTech Computer Science student at LPU.',
    images: [
      {
        url: '',
        // og image here
      },
    ],
    site_name: Astro.props.openGraph?.site_name || 'Mokshit Jain',
  }}
/>

<!-- Social Media Meta Tags -->
<meta property="og:type" content="website" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:creator" content="@your_twitter_handle" />

<!-- Keywords for SEO -->
<meta name="keywords" content="Mokshit Jain, Software Developer, IoT Engineer, Full Stack Developer, ESP32, Node.js, React.js, Next.js, Nest.js, MongoDB, PostgreSQL, Innovation Studio, LPU, Punjab" />

<!-- Rich Results / Structured Data -->
<script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "Person",
    "name": "Mokshit Jain",
    "jobTitle": "Software Developer & IoT Engineer",
    "url": "https://mokshitjain.netlify.app",
    "sameAs": [
      "https://github.com/mokbhai",
      "https://www.linkedin.com/in/mokshit-jain/",
      "https://mokshitjain.netlify.app"
    ],
    "alumniOf": {
      "@type": "CollegeOrUniversity",
      "name": "Lovely Professional University"
    },
    "knowsAbout": [
      "Full Stack Development",
      "IoT Systems",
      "ESP32",
      "Node.js",
      "React.js",
      "Next.js",
      "Nest.js",
      "MongoDB",
      "PostgreSQL"
    ]
  }
</script>

<!-- Custom Font (optional) -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />

<!-- Additional Meta Tags -->
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />
<meta name="theme-color" content="#000000" media="(prefers-color-scheme: dark)" />
<meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)" />

<!-- Add your favicon files in public/images/ -->
<link rel='apple-touch-icon' sizes='180x180' href='/images/YOUR_FAVICON.svg' />
<link
  rel='icon'
  type='image/png'
  sizes='32x32'
  href='/images/YOUR_FAVICON.svg'
/>
<link
  rel='icon'
  type='image/png'
  sizes='16x16'
  href='/images/YOUR_FAVICON.svg'
/>

<!-- Theme colors for browsers -->
<meta name='msapplication-TileColor' content='#000000' />

<!-- Auto-generated sitemap -->
<link rel='sitemap' href='/sitemap-index.xml' />

<!-- Preload background images for performance -->
{
  backgrounds.map((bg) => (
    <link
      rel='preload'
      href={bg.src}
      as='image'
      type='image/webp'
      fetchpriority='high'
    />
  ))
}
